A Promise is an object that represents the eventual completion or failure of an async operation and its resulting value.

Promise object Properties:
1.Pending
2.Fulfilled
3.Rejected

Pending: The initial state. The operation is still in progress.
Fulfilled: The operation completed successfully, and the Promise now holds a value.
Rejected: The operation failed, and the Promise now holds a reason for the failure.

    how to create a promise in JavaScript:

    const  My Promise = new Promise((resolve, reject) => {
  if (condition) {
    resolve('Promise resolved'); 
  } else {
    reject('Promise Rejected'); 
  }
});    

( If the condition is satisfied, the Promise will be resolved; otherwise, Promise will be rejected.)

  The then() method

This ".then();" method is only called when the Promise is resolved( completed successfully), and what we passed in it will be displayed. 
For example:

my Promise .then((message)=>{  
console.log(message);  
});  

The .catch(); method
This ".catch();" method is called when the promise is rejected (or failed). And we can also pass a message in it for the user. 
For example:

my Promise .then((message)=>{  
console.log(message);  
}).catch((message)=>{  
console.log(message);  
});  








      
